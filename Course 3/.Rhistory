# Logo precisamos procurar os dados que estão dentro dessa classe
# ?html_nodes
results <- webPage %>% html_nodes('.short-desc')
# Criando uma lista para armazenar os dados
records <- vector("list", length = length(results))
# Criação dos campos do data set
for (i in seq_along(results)) {
# Extraindo as datas que se encontram dentro da tag Strong
# ?html_text
# ?xml_contets <- retorna todos os conteudos dentro de uma tag em forma de lista
# ?html_attr
rawDate <- results[i] %>% html_nodes('strong') %>% html_text(trim = TRUE)
date <- paste(rawDate, '2017')
rawLie <- xml_contents(results[i])[2] %>% html_text(trim = TRUE)
lie <- str_sub(rawLie, 2, -2)
rawExplanation <- results[i] %>% html_nodes('.short-truth') %>% html_text(trim = TRUE)
explanation <- str_sub(rawExplanation, 2, -2)
url <- results[i] %>% html_nodes('a') %>% html_attr('href')
records[[i]] <- data_frame(date = date, lie = lie, explanation = explanation, url = url)
}
# Data set Final
df <- bind_rows(records)
# Transformando campo date para o formato Date em R
df$date <- mdy(df$date)
# Exportando para csv
write_csv(df, 'trumps_lie.csv')
View(df)
urlPage <- 'https://www.cuponomia.com.br/desconto/ifood'
webPage <- read_html(urlPage)
webPage
library(stringr)
library(dplyr)
library(lubridate)
library(readr)
urlPage <- 'https://www.cuponomia.com.br/desconto/ifood'
webPage <- read_html(urlPage)
results <- webPage %>% html_nodes('item scroll-item js-scroll-item')
results
results[1]
results[2]
library(stringr)
library(dplyr)
library(lubridate)
library(readr)
urlPage <- 'https://www.cuponomia.com.br/desconto/ifood'
webPage <- read_html(urlPage)
results <- webPage %>% html_nodes('content-block coupons-content js-toll')
results
results[1]
library(stringr)
library(dplyr)
library(lubridate)
library(readr)
urlPage <- 'https://www.cuponomia.com.br/desconto/ifood'
webPage <- read_html(urlPage)
results <- webPage %>% html_nodes('.item scroll-item js-scroll-item')
results
results[1]
# Pacote rvest - Para fazer web scrapping
library(stringr)
library(dplyr)
library(lubridate)
library(readr)
urlPage <- 'https://www.nytimes.com/interactive/2017/06/23/opinion/trumps-lies.html'
# Leitura da web page
webPage <- read_html(urlPage)
# Extraindo as chaves dos registros
# Olhando o código fonte da página pode-se ver que os dados estão dentro da classe html <span class="short-desc">
# Logo precisamos procurar os dados que estão dentro dessa classe
# ?html_nodes
results <- webPage %>% html_nodes('.short-desc')
results
library(stringr)
library(dplyr)
library(lubridate)
library(readr)
urlPage <- 'https://www.cuponomia.com.br/desconto/ifood'
webPage <- read_html(urlPage)
results <- webPage %>% html_nodes('.item-title')
results
library(stringr)
library(dplyr)
library(lubridate)
library(readr)
urlPage <- 'https://www.cuponomia.com.br/desconto/ifood'
webPage <- read_html(urlPage)
results <- webPage %>% html_nodes('.item-title')
for (i in length(results)) {
title <- results[i] %>% html_nodes('.js-itemTitle') %>% html_text( trim = TRUE )
print(title)
}
library(stringr)
library(dplyr)
library(lubridate)
library(readr)
urlPage <- 'https://www.cuponomia.com.br/desconto/ifood'
webPage <- read_html(urlPage)
results <- webPage %>% html_nodes('.item-title')
records <- vector("list", length = length(results))
for (i in length(results)) {
title <- results[i] %>% html_nodes('.js-itemTitle') %>% html_text( trim = TRUE )
records[[i]] <- data_frame(title=title)
}
df <- bind_rows(records)
df
View(df)
library(stringr)
library(dplyr)
library(lubridate)
library(readr)
urlPage <- 'https://www.cuponomia.com.br/desconto/ifood'
webPage <- read_html(urlPage)
results <- webPage %>% html_nodes('.item-title')
records <- vector("list", length = length(results))
for (i in length(results)) {
print(i)
#title <- results[i] %>% html_nodes('.js-itemTitle') %>% html_text( trim = TRUE )
#records[[i]] <- data_frame(title=title)
}
df <- bind_rows(records)
library(stringr)
library(dplyr)
library(lubridate)
library(readr)
urlPage <- 'https://www.cuponomia.com.br/desconto/ifood'
webPage <- read_html(urlPage)
results <- webPage %>% html_nodes('.item-title')
records <- vector("list", length = length(results))
for (i in seq_along(results)) {
title <- results[i] %>% html_nodes('.js-itemTitle') %>% html_text( trim = TRUE )
records[[i]] <- data_frame(title=title)
}
df <- bind_rows(records)
View(df)
resultsCupom <- webPage %>% html_nodes('.item-code-link')
resultsCupom
results <- webPage %>% html_nodes('.item scroll-item js-scroll-item     item-code   item-badge')
results
results <- webPage %>% html_nodes('.item scroll-item js-scroll-item item-code item-badge')
results
results <- webPage %>% html_nodes('.content-block coupons-content js-toll')
results
results <- webPage %>% html_nodes('.coupon-info') %>% str_subset(., 'js-coupon-info') %>% str_subset(., 'isSwitchable')
results <- webPage %>% html_nodes('.coupon-info') %>% str_subset(., 'js-coupon-info')
results <- webPage %>% html_nodes('.coupon-info') %>% str_subset('.', 'js-coupon-info')
results <- webPage %>% html_nodes('.coupon-info.js-coupon-info.isSwitchable')
results
results <- webPage %>% html_nodes('.coupon-info.js-coupon-info')
results
library(stringr)
library(dplyr)
library(lubridate)
library(readr)
urlPage <- 'https://www.cuponomia.com.br/desconto/ifood'
webPage <- read_html(urlPage)
results <- webPage %>% html_nodes('.coupon-info.js-coupon-info')
#resultsTitle <- webPage %>% html_nodes('.item-title')
#resultsCupom <- webPage %>% html_nodes('.item-code-link')
records <- vector("list", length = length(results))
for (i in seq_along(results)) {
title <- results[i] %>% html_nodes('.js-itemTitle') %>% html_text( trim = TRUE )
records[[i]] <- data_frame(title=title)
}
df <- bind_rows(records)
View(df)
library(stringr)
library(dplyr)
library(lubridate)
library(readr)
urlPage <- 'https://www.cuponomia.com.br/desconto/ifood'
webPage <- read_html(urlPage)
results <- webPage %>% html_nodes('.coupon-info.js-coupon-info')
#resultsTitle <- webPage %>% html_nodes('.item-title')
#resultsCupom <- webPage %>% html_nodes('.item-code-link')
records <- vector("list", length = length(results))
for (i in seq_along(results)) {
title <- results[i] %>% html_nodes('.js-itemTitle') %>% html_text( trim = TRUE )
cupom <- results[i] %>% html_nodes('.item-code-link')
records[[i]] <- data_frame(title = title, cupom = cupom)
}
df <- bind_rows(records)
library(stringr)
library(dplyr)
library(lubridate)
library(readr)
urlPage <- 'https://www.cuponomia.com.br/desconto/ifood'
webPage <- read_html(urlPage)
results <- webPage %>% html_nodes('.coupon-info.js-coupon-info')
#resultsTitle <- webPage %>% html_nodes('.item-title')
#resultsCupom <- webPage %>% html_nodes('.item-code-link')
records <- vector("list", length = length(results))
for (i in seq_along(results)) {
title <- results[i] %>% html_nodes('.js-itemTitle') %>% html_text( trim = TRUE )
cupom <- results[i] %>% html_nodes('.item-code-link')
records[[i]] <- data_frame(title = title, cupom = cupom) %>% html_text( trim = TRUE)
}
df <- bind_rows(records)
df
library(stringr)
library(dplyr)
library(lubridate)
library(readr)
urlPage <- 'https://www.cuponomia.com.br/desconto/ifood'
webPage <- read_html(urlPage)
results <- webPage %>% html_nodes('.coupon-info.js-coupon-info')
#resultsTitle <- webPage %>% html_nodes('.item-title')
#resultsCupom <- webPage %>% html_nodes('.item-code-link')
records <- vector("list", length = length(results))
for (i in seq_along(results)) {
title <- results[i] %>% html_nodes('.js-itemTitle') %>% html_text( trim = TRUE )
cupom <- results[i] %>% html_nodes('.item-code-link') %>% html_text( trim = TRUE)
records[[i]] <- data_frame(title = title, cupom = cupom)
}
df <- bind_rows(records)
results
results[1]
records
library(stringr)
library(dplyr)
library(lubridate)
library(readr)
urlPage <- 'https://www.cuponomia.com.br/desconto/ifood'
webPage <- read_html(urlPage)
results <- webPage %>% html_nodes('.coupon-info.js-coupon-info')
#resultsTitle <- webPage %>% html_nodes('.item-title')
#resultsCupom <- webPage %>% html_nodes('.item-code-link')
records <- vector("list", length = length(results))
for (i in seq_along(results)) {
title <- results[i] %>% html_nodes('.js-itemTitle') %>% html_text( trim = TRUE )
#cupom <- results[i] %>% html_nodes('.item-code-link') %>% html_text( trim = TRUE)
records[[i]] <- data_frame(title = title, cupom = cupom)
}
df <- bind_rows(records)
library(stringr)
library(dplyr)
library(lubridate)
library(readr)
urlPage <- 'https://www.cuponomia.com.br/desconto/ifood'
webPage <- read_html(urlPage)
results <- webPage %>% html_nodes('.coupon-info.js-coupon-info')
#resultsTitle <- webPage %>% html_nodes('.item-title')
#resultsCupom <- webPage %>% html_nodes('.item-code-link')
records <- vector("list", length = length(results))
for (i in seq_along(results)) {
title <- results[i] %>% html_nodes('.js-itemTitle') %>% html_text( trim = TRUE )
#cupom <- results[i] %>% html_nodes('.item-code-link') %>% html_text( trim = TRUE)
records[[i]] <- data_frame(title = title, cupom = cupom)
}
df <- bind_rows(records)
df
View(df)
library(stringr)
library(dplyr)
library(lubridate)
library(readr)
urlPage <- 'https://www.cuponomia.com.br/desconto/ifood'
webPage <- read_html(urlPage)
results <- webPage %>% html_nodes('.coupon-info.js-coupon-info')
#resultsTitle <- webPage %>% html_nodes('.item-title')
#resultsCupom <- webPage %>% html_nodes('.item-code-link')
records <- vector("list", length = length(results))
for (i in seq_along(results)) {
title <- results[i] %>% html_nodes('.item-title') %>% html_nodes('.js-itemTitle') %>% html_text( trim = TRUE )
#cupom <- results[i] %>% html_nodes('.item-code-link') %>% html_text( trim = TRUE)
records[[i]] <- data_frame(title = title, cupom = cupom)
}
df <- bind_rows(records)
results[i] %>% html_nodes('.item-title')
results[1] %>% html_nodes('.item-title')
library(stringr)
library(dplyr)
library(lubridate)
library(readr)
urlPage <- 'https://www.cuponomia.com.br/desconto/ifood'
webPage <- read_html(urlPage)
results <- webPage %>% html_nodes('.coupon-info.js-coupon-info')
#resultsTitle <- webPage %>% html_nodes('.item-title')
#resultsCupom <- webPage %>% html_nodes('.item-code-link')
records <- vector("list", length = length(results))
for (i in seq_along(results)) {
title <- results[i] %>% html_nodes('.item-title') %>% html_nodes('.js-itemTitle') %>% html_text( trim = TRUE )
#cupom <- results[i] %>% html_nodes('.item-code-link') %>% html_text( trim = TRUE)
records[[i]] <- data_frame(title = title)
}
df <- bind_rows(records)
View(df)
?ouath_app
??ouath_app
myApp <- oauth_app('twiiter',
key = apiKey,
secret = apiSecretKey
)
sig <-sign_oaut1.0(
myApp,
token = acessToken,
token_secret = acessTokenSecret
)
myApp <- oauth_app('twiiter',
key = apiKey,
secret = apiSecretKey
)
sig <-sign_oaut1.0(
myApp,
token = acessToken,
token_secret = acessTokenSecret
)
homeTL = GET('https://api.twiiter.com/1.1/statuses/home_timeline.json', sig)
library(httr)
myApp <- oauth_app('twiiter',
key = apiKey,
secret = apiSecretKey
)
sig <-sign_oaut1.0(
myApp,
token = acessToken,
token_secret = acessTokenSecret
)
homeTL = GET('https://api.twiiter.com/1.1/statuses/home_timeline.json', sig)
?sign_oauth1.0
myApp <- oauth_app('twiiter',
key = apiKey,
secret = apiSecretKey
)
sig <-sign_oauth1.0(
myApp,
token = acessToken,
token_secret = acessTokenSecret
)
homeTL = GET('https://api.twiiter.com/1.1/statuses/home_timeline.json', sig)
library(httr)
apiKey <- 'o74pMRLBxdtsXDChJvWYSf3iT'
apiSecretKey <- 'n0Y84zJKBYXOGAzz9flzVPMipSj95cfY0gFdrD7SMEmBNywgjU'
acessToken <- '914244142556950533-KeR3DmvFTbJqZpcxNktdYDU1pwvuPKC'
acessTokenSecret <- 'lLAzMNmmq4HBH97JUMJttboVSem4RjpyNQBXC8ZI5VqFH'
myApp <- oauth_app('twiiter',
key = apiKey,
secret = apiSecretKey
)
sig <-sign_oauth1.0(
myApp,
token = acessToken,
token_secret = acessTokenSecret
)
homeTL
homeTL = GET('https://api.twiiter.com/1.1/statuses/home_timeline.json', sig)
myApp <- oauth_app('twiiter',
key = apiKey,
secret = apiSecretKey
)
sig <-sign_oauth1.0(
myApp,
token = acessToken,
token_secret = acessTokenSecret
)
homeTL = GET('https://api.twitter.com/1.1/statuses/home_timeline.json', sig)
homeTL
?oauth_app
homeTL = GET('https://api.twitter.com/1.1/collections/list.json', sig)
homeTL
View(homeTL)
# DPLYR
library(dplyr)
options(width = 105)
# DPLYR
library(dplyr)
options(width = 105)
# DPLYR
library(dplyr)
options(width = 105)
# DPLYR
library(dplyr)
options(width = 105)
getwd()
setwd('/home/ans3/Área de Trabalho/LearningR/')
setwd('/home/ans3/Área de Trabalho/LearningR/Course 3/')
df <- readRDS('./data/chicago.rds')
# DPLYR
library(dplyr)
options(width = 105)
df <- readRDS('./data/chicago.rds')
rm(list = ls())
# DPLYR
library(dplyr)
options(width = 105)
df <- readRDS('./data/chicago.rds')
dim(df)
str(df)
names(df)
# Selecionar nomes usando dplyr
head(select(df, city))
# Selecionar nomes usando dplyr
head(select(df, city:dptp))
?select
x <- 'city'
selec(df, x)
select(df, x)
# Selecionar nomes usando dplyr
# Usamos a função select
head(select(df, city:dptp))
select(df, city:dptp)
# Filtrando dados por uma condição
df.f <- filter(df, (pm25tmean2 > 30 & pm10tmean2 > 20))
df.f
# Filtrando dados por uma condição
df.f <- filter(df, (pm25tmean2 > 30 & pm10tmean2 > 20))
df.f
select(df.f, city:dptp)
# Caso ocorra a necessidade de escolher determinadas colunas deste novo dataFrame filtrado
select(df.f, city:dptp)
# Caso ocorra a necessidade de escolher determinadas colunas deste novo dataFrame filtrado
select(dfFiltered , city:dptp)
# Filtrando dados por uma condição
dfFiltered <- filter(df, (pm25tmean2 > 30 & pm10tmean2 > 20))
# Caso ocorra a necessidade de escolher determinadas colunas deste novo dataFrame filtrado
select(dfFiltered , city:dptp)
# Filtrando dados por uma condição
dfFiltered <- filter(df, (pm25tmean2 > 30 & pm10tmean2 > 20))
select(dfFiltered , city:dptp)
# Ordenando um dataframe
df <- arrange(df, date)
head(df, 10)
head(df, 10)
tail(chicago)
# Renomeando colunas
df <- rename(df, pm25 = pm25tmean2, dewpoint = dptp)
head(df)
# Para criar modificar e deletar colunas usamos a função mutate
df <- mutate(df, pm25detrend = pm25 - mean(pm25, na.rm = TRUE))
# Para criar modificar e deletar colunas usamos a função mutate
df <- mutate(df, pm25detrend = pm25 - mean(pm25, na.rm = TRUE))
head(df, 10)
tail(df, 10)
# Para criar modificar e deletar colunas usamos a função mutate
df <- mutate(df, pm25detrend = pm25 - mean(pm25, na.rm = TRUE))
head(df, 10)
# Usando a função groupby
df <- mutate(df, tempcat = factor(1 * tmpd > 80), labels = c('cold', 'hot'))
# Usando a função groupby
df <- mutate(df, tempcat = factor(1 * (tmpd > 80), labels = c('cold', 'hot')))
head(df, 10)
hotCold <- group_by(df, tempcat)
hotCold
head(hotCold)
hotCold <- group_by(df, tempcat)
summarize(hotCold)
# O R um caractere especial que permite fazer encadeamentos de funções
chicago %>% mutate(month = as.POsixlt(date)$mon + 1)
# O R um caractere especial que permite fazer encadeamentos de funções
df %>% mutate(month = as.POsixlt(date)$mon + 1)
df %>% mutate(month = as.POsixlt(date)$mon + 1) %>% group_by(month) %>% summarize(pm25 = mean(pm25))
reviewsUrl <- 'http://www.sharecsv.com/dl/e70e9c289adc4b87c900fdf69093f996/reviews.csv'
solutionUrl <- 'http://www.sharecsv.com/dl/0863fd2414355555be0260f46dbe937b/solutions.csv"'
reviewsFile <- './data/reviews.csv'
solutionsFile <- './data/solutions.csv'
if (!file.exists(reviewsFile)) {
download.file(reviewsUrl, destfile = reviewsFile)
}
if (!file.exists(solutionsFile)) {
download.file(solutionUrl, destfile = solutionsFile)
}
reviewsUrl <- 'http://www.sharecsv.com/dl/e70e9c289adc4b87c900fdf69093f996/reviews.csv'
solutionUrl <- 'http://www.sharecsv.com/dl/0863fd2414355555be0260f46dbe937b/solutions.csv"'
reviewsFile <- './data/reviews.csv'
solutionsFile <- './data/solutions.csv'
if (!file.exists(reviewsFile)) {
download.file(reviewsUrl, destfile = reviewsFile, method = 'curl')
}
if (!file.exists(solutionsFile)) {
download.file(solutionUrl, destfile = solutionsFile, method = 'curl')
}
# Merging data
reviewsUrl <- 'www.sharecsv.com/dl/e70e9c289adc4b87c900fdf69093f996/reviews.csv'
solutionUrl <- 'www.sharecsv.com/dl/0863fd2414355555be0260f46dbe937b/solutions.csv'
reviewsUrl <- 'www.sharecsv.com/dl/e70e9c289adc4b87c900fdf69093f996/reviews.csv'
solutionUrl <- 'www.sharecsv.com/dl/0863fd2414355555be0260f46dbe937b/solutions.csv'
reviewsFile <- './data/reviews.csv'
solutionsFile <- './data/solutions.csv'
if (!file.exists(reviewsFile)) {
download.file(reviewsUrl, destfile = reviewsFile)
}
if (!file.exists(solutionsFile)) {
download.file(solutionUrl, destfile = solutionsFile)
}
reviewsUrl <- 'www.sharecsv.com/dl/e70e9c289adc4b87c900fdf69093f996/reviews.csv'
solutionUrl <- 'www.sharecsv.com/dl/0863fd2414355555be0260f46dbe937b/solutions.csv'
reviewsFile <- './data/reviews.csv'
solutionsFile <- './data/solutions.csv'
if (!file.exists(reviewsFile)) {
download.file(reviewsUrl, destfile = reviewsFile)
}
if (!file.exists(solutionsFile)) {
download.file(solutionUrl, destfile = solutionsFile)
}
reviews <- read.csv(reviewsFile)
solutions <- read.csv(solutionsFile)
head(reviews, 3)
head(solution, 3)
solutions <- read.csv(solutionsFile)
head(solution, 3)
head(solutions, 3)
View(reviews)
View(reviews)
View(solutions)
View(solutions)
mergedData <- merge(reviews, solutions, by.x = 'solution_id', by.y = 'id', all = TRUE)
View(mergedData)
View(mergedData)
mergedData <- merge(reviews, solutions, by.x = 'solution_id', by.y = 'id', all = TRUE)
head(mergedData)
mergedData <- merge(reviews, solutions, by.x = 'solution_id', by.y = 'id', all = TRUE, x = 'solution')
mergedData <- merge(reviews, solutions, by.x = 'solution_id', by.y = 'id', all = TRUE)
head(mergedData)
